openapi: 3.0.0
info:
  title: Talpods APIs
  version: 1.0.0
  description: Auth and user management API backend for the profile builder
servers:
  - url: http://localhost:3000
tags:
  - name: Auth
    description: Authentication operations
  - name: Users
    description: User management operations
paths:
  /auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string 
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/me:
    get:
      summary: Get user profile information
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile information
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/refresh:
    post:
      summary: Refresh token
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: New JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/logout:
    post:
      summary: Logout a user
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users:
    get:
      summary: Get a list of users
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email 
                    username:
                      type: string
                    password: 
                      type: string
                      
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/create:
    post:
      summary: Create a new user
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - role
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email 
                password:
                  type: string
                role:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    
  /users/deleteByEmail:
    delete:
      summary: Delete a user by email
      tags: [Users]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    
  /users/update:
    patch:
      summary: Update a user's information
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email 
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
